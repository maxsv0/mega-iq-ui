@mixin background-size($background-size) {
  -webkit-background-size: $background-size;
  -moz-background-size: $background-size;
  -o-background-size: $background-size;
  background-size: $background-size;
}

@mixin border-radius($radius) {
  border-radius: $radius;
  -webkit-border-radius: $radius;
  -moz-border-radius: $radius;
}

@mixin transition($property, $duration, $easing: linear) {
  transition: $property $duration $easing;
  -webkit-transition: $property $duration $easing;
  -moz-transition: $property $duration $easing;
}

@mixin box-shadow($left, $top, $radius, $color) {
  box-shadow:
    $left $top $radius $color,
      (-$left) (-$top) $radius #fff;
  -webkit-box-shadow:
    $left $top $radius $color,
      (-$left) (-$top) $radius #fff;
  -moz-box-shadow:
    $left $top $radius $color,
      (-$left) (-$top) $radius #fff;
}

@mixin box-shadow-soft($left, $top, $radius, $color) {
  box-shadow:
    $left $top $radius $color,
      (-$left) (-$top) $radius rgba(255, 255, 255, .1);
  -webkit-box-shadow:
    $left $top $radius $color,
      (-$left) (-$top) $radius rgba(255, 255, 255, .1);
  -moz-box-shadow:
    $left $top $radius $color,
      (-$left) (-$top) $radius rgba(255, 255, 255, .1);
}

@mixin box-shadow-inset($left, $top, $radius, $color) {
  box-shadow:
    inset $left $top $radius $color,
    inset (-$left) (-$top) $radius #fff;
  -webkit-box-shadow:
    inset $left $top $radius $color,
    inset (-$left) (-$top) $radius #fff;
  -moz-box-shadow:
    inset $left $top $radius $color,
    inset (-$left) (-$top) $radius #fff;
}

@mixin gradient($start-color, $end-color, $orientation) {
  background-color: $start-color;
  @if $orientation == 'vertical' {
    background: -webkit-linear-gradient(top, $start-color, $end-color) !important;
    background: linear-gradient(to bottom, $start-color, $end-color) !important;
  } @else if $orientation == 'horizontal' {
    background: -webkit-linear-gradient(left, $start-color, $end-color) !important;
    background: linear-gradient(to right, $start-color, $end-color) !important;
  } @else {
    background: -webkit-radial-gradient(center, ellipse cover, $start-color, $end-color) !important;
    background: radial-gradient(ellipse at center, $start-color, $end-color) !important;
  }
}

$mobile-width-sm: 320px;
$mobile-width-md: 375px;
$mobile-width-lg: 576px;
$desktop-width: 992px;

@mixin mobile-sm {
  @media (max-width: $mobile-width-sm) {
    @content;
  }
}

@mixin mobile-md {
  @media (min-width: $mobile-width-sm) and (max-width: $mobile-width-md) {
    @content;
  }
}

@mixin mobile-lg {
  @media (min-width: $mobile-width-md) and (max-width: $mobile-width-lg) {
    @content;
  }
}

@mixin tablet {
  @media (min-width: $mobile-width-lg) and (max-width: $desktop-width) {
    @content;
  }
}

@mixin desktop {
  @media (min-width: $desktop-width) {
    @content;
  }
}

@mixin font-face($font-family, $url, $font-weight, $font-style) {
  /* #{$font-family}-#{$font-weight} */
  @font-face {
    font-family: quote($font-family);
    src: url('#{$url}.eot'); /* IE9 Compat Modes */
    src: url('#{$url}.eot?#iefix') format('embedded-opentype'), /* IE6-IE8 */
    url('#{$url}.woff2') format('woff2'), /* Super Modern Browsers */
    url('#{$url}.woff') format('woff'), /* Modern Browsers */
    url('#{$url}.ttf') format('truetype'), /* Safari, Android, iOS */
    url('#{$url}.svg') format('svg'); /* Legacy iOS */
    font-weight: $font-weight;
    font-style: $font-style;
  }
}
